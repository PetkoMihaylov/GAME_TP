<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the fireball

//Fireball
speed = 4;
cur_mouse_x = mouse_x;
cur_mouse_y = mouse_y;
//direction = point_direction(x , y, cur_mouse_x, cur_mouse_y);

damage = DAMAGE_;
knockback = KNOCKBACK_;
creator = noone;
// the mouse will be the direction of the fireball
//direction = point_direction(x, y, mouse_x, mouse_y); 


//move_towards_point(cur_mouse_x, cur_mouse_y, 4 ); 
angle = point_direction(x, y, cur_mouse_x, cur_mouse_y);
//var dir = point_direction(object11.x, object11.y, cur_mouse_x, cur_mouse_y);
//direction = dir;
alarm[3] = 20;


//move_towards_point(900, 800, 5);
//obj_player.alarm[0] = 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += lengthdir_x(speed, angle);
y += lengthdir_y(speed, angle);

var enemy = collision_circle( x, y, 2, obj_enemy_slime, false, true );


if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime_boss, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crocodile_boss, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crocodile_minion, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_fly_1, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crab1, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crab2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_spider, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_lizard, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_tree_boss, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_fly_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_fly_3, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_fly_4, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_fly_boss, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crocodile_minion_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_crocodile_minion_3, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime1_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime1_3, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime2_1, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime2_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime_3_1, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime3_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime4, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime4_1, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime4_2, false, true );

if !instance_exists(enemy)
enemy = collision_circle( x, y, 2, obj_enemy_slime_3, false, true );


if instance_exists(enemy)    
{
    var hero = instance_find(object11,1);
    var stats = instance_find(obj_player_stats_2,1);

    enemy.hp -= global.spelldamage; //stats.spelldamage;
    instance_destroy();

}
//if(x == cur_mouse_x &amp;&amp; y== cur_mouse_y)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lifeform_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage all life forms
if(other.id != creator)
{
    other.hp -= damage;
    if(instance_exists(creator))
    {
    // Apply the knockback
        var dir = point_direction(creator.x , creator.y, other.x, other.y);
    }
    else
    {
        var dir = point_direction(x , y, other.x, other.y);
    }
    var xforce = lengthdir_x(knockback, dir);
    var yforce = lengthdir_y(knockback, dir);
    with (other)
    {
        physics_apply_impulse(x, y, xforce, yforce); //not the same as above, because we use the knocbkback and direction, not the 'other' object's coordinates
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy if it is outside the current room;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,0</point>
    <point>16,16</point>
    <point>0,16</point>
  </PhysicsShapePoints>
</object>
