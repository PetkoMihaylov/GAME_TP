<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player2_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set fixed rotation

event_inherited();

spd = 2;

hspd = 0;
vspd = 0;
len = 0;

xaxis = 0;
yaxis = 0;

dir = 0;

hp = 10;

attacking = false;

image_speed = 5;

//scr_init_input();
scr_get_input();


state = scr_move_state;

face = RIGHT;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This alarm is for the dash state
//

state = scr_move_state;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step event for Movement
//event_inherited();

if(global.pause) exit;

depth = -y;

script_execute(state);
//var xx = object11.x;
//var yy = object11.y;

//Check for death
if(global.select == 2)
{
    if(global.hp &lt;= 0)
    {
        instance_destroy();
        instance_deactivate_all(false);
        room_goto(dead_room);
    }
    if (keyboard_check_pressed(global.key_fireball))
    {
        if(global.mana &gt;= global.spellcost)
        {
            global.mana -= global.spellcost;
            instance_create(x,y,obj_fireball);
        }
    }
    
}


//working code for lives, but won't use it because the other character does not work with it
//obj_player_stats.hp fails on the player1, but not with the global variables of player2
/*
if(global.select == 2)
{
    if(global.hp &lt;=0 and global.life &gt;= 1)
    {
        instance_destroy();
        if(global.life &gt;= 1)
        {
            alarm[4] = room_speed;
            global.life --;
            instance_create(xx, yy + 2, object11);
            global.hp = global.maxhp
        }
    }
    else if(global.hp &lt;=0 and global.life &lt; 1)
    {
        instance_destroy();
        instance_deactivate_all(false);
        room_goto(dead_room);
    }
    if (keyboard_check_pressed(global.key_fireball))
    {
        if(global.mana &gt;= global.spellcost)
        {
            global.mana -= global.spellcost;
            instance_create(x,y,obj_fireball);
        }
    }
    
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door_2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
instance_destroy();
if (room_exists(other.new_room))
{
    room_goto(other.new_room);
}
//room_goto(rm_win);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go through the door
if (room_exists(other.new_room))
{
    room_goto(other.new_room);
    x = other.new_x;
    y = other.new_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_expr">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect experience(expr)

with (other) 
{
    instance_destroy();
}

with (obj_player_stats)
{
    //obj_player_stats.expr += 1;
    //NEEDS CHANGES
    global.expr += 1;
    if (global.expr &gt;= global.maxexpr)
    {
        global.level += 1;
        global.expr = global.expr - global.maxexpr;
        //maxexpr += 3;
        global.maxexpr *= 2; //It means every next level the needed experience is doubled
        global.hp += 2;
        global.maxhp += 2;
        global.mana += 4;
        global.maxmana += 4;
        global.attack += 0.75;
        global.spelldamage += 2;
        //global.spelldamage_two += 1
        global.hp = global.maxhp;
        global.mana = global.maxmana;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect health

with (other) 
{
    instance_destroy();
}

with (obj_player_stats)
{
    global.hp = min(global.hp+5, global.maxhp);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change back to move state
if(state == scr_fireball_state)
{
    state = scr_move_state;
    attacking = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set fixed rotation
if(global.pause) exit;
phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> ///Draw the shadow

draw_sprite(spr_player_shadow, image_index, x, y);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>6</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,20</point>
    <point>16,20</point>
    <point>16,32</point>
    <point>12,32</point>
  </PhysicsShapePoints>
</object>
